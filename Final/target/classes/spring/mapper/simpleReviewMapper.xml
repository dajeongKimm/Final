<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.tje.model.SimpleReviewMapper">

   <!-- 간단 리뷰 전체 카운트 수 -->
   <select id="selectSimpleReviewCount" resultType="int" parameterType="int">
      select count(*) 
      from review_list_view 
      where restaurant_id = #{restaurant_id}
   </select>

   <!-- 간단 리뷰 전체 조회(app) -->
   <select id="selectAllSimpleReview" parameterType="int" resultType="reviewList">
      select * 
      from review_list_view 
      where restaurant_id = #{restaurant_id}
   </select>

   <!-- 간단 리뷰 정렬 ( 최신 날짜 순 ) -->
   <select id="selectSimpleReviewList" parameterType="java.util.Map" resultType="reviewList">
      select * 
      from review_list_view 
      where restaurant_id = #{restaurant_id}
      order by simple_review_id desc 
      limit #{startIdx}, #{count}
   </select>

   <!-- 간단 리뷰 1개 조회 -->
   <select id="selectSimpleReview" parameterType="int" resultType="simpleReview">
      select * 
      from simple_review 
      where simple_review_id = #{simple_review_id}
   </select>

   <select id="selectSimpleReviewScore" parameterType="int" resultType="simpleReviewScore">
  	  select * 
  	  from simple_review_score 
  	  where simple_review_score_id = #{simple_review_score_id} 
   </select>




   <!--  간단 리뷰 작성 -->
   <insert id="insertSimpleReviewScore" useGeneratedKeys="true" keyProperty="simple_review_score_id" parameterType="simpleReviewScore">
      insert into simple_review_score 
      (restaurant_id, member_id, score_flavor, score_volume, score_service, total_score) 
      values(#{restaurant_id}, #{member_id}, #{score_flavor}, #{score_volume}, #{score_service}, #{total_score})
   </insert>
   
   <insert id="insertSimpleReviewLike" useGeneratedKeys="true" keyProperty="simple_review_like_id" parameterType="simpleReviewLike">
      insert into simple_review_like 
      (simple_review_like_count, restaurant_id, member_id) 
      values(default, #{restaurant_id}, #{member_id})
   </insert>   
   
   <insert id="insertSimpleReviewNotify" useGeneratedKeys="true" keyProperty="simple_review_notify_id" parameterType="simpleReviewNotify">
      insert into simple_review_notify 
      (restaurant_id, member_id, simple_review_notify_count) 
      values(#{restaurant_id}, #{member_id}, default)
   </insert>
   
   <!-- 간단 리뷰 이미지 insert -->
   <insert id="insertFileName" useGeneratedKeys="true" keyProperty="simple_review_file_id" parameterType="simpleReviewFile">
	  insert into simple_review_file
	  (file_name) 
	  values(#{file_name})
   </insert>
	
   <insert id="insertSimpleReview" parameterType="simpleReview">
      insert into simple_review 
      (simple_review_score_id, simple_review_contents_text, simple_review_file_id, 
         restaurant_id, member_id, simple_review_like_id, simple_review_notify_id, simple_review_registdate) 
      values(#{simpleReviewScore.simple_review_score_id}, #{simple_review_contents_text}, #{simpleReviewFile.simple_review_file_id}, 
            #{restaurant_id}, #{member_id}, #{simpleReviewLike.simple_review_like_id}, #{simpleReviewNotify.simple_review_notify_id}, now())
   </insert>
   
   <!-- 레스토랑별 총합 점수 ( 리뷰 작성 )-->
   <update id="insertSumScore" parameterType="map">
   	update simple_review_sumscore
   	set sum_score = sum_score + #{total_score}, allcount = allcount + 1 
   	where restaurant_id = #{restaurant_id}
   </update>
   
   
   
   
   
   <!-- 간단 리뷰 삭제 -->
   <delete id="deleteSimpleReview" parameterType="simpleReview">
      delete from simple_review 
      where simple_review_id = #{simple_review_id} 
   </delete>  
   
   <delete id="deleteSimpleReviewScore" parameterType="int">
      delete from simple_review_score 
      where simple_review_score_id = #{simple_review_score_id}
   </delete>
   
   <delete id="deleteSimpleReviewLike" parameterType="int">
      delete from simple_review_like 
      where simple_review_like_id = #{simple_review_like_id}
   </delete>
   
   <delete id="deleteSimpleReviewNotify" parameterType="int">
      delete from simple_review_notify 
      where simple_review_notify_id = #{simple_review_notify_id}
   </delete>
  
   <delete id="deleteSimpleReviewFile" parameterType="int">
   	  delete from simple_review_file 
   	  where simple_review_file_id = #{simple_review_file_id}
   </delete>
   
   <!-- sumscore, allcount update -->
   <update id="deleteSumScore">
      update simple_review_sumscore 
      set sum_score = sum_score - #{total_score}, allcount = allcount - 1 
      where restaurant_id = #{restaurant_id}
   </update>
   
   
   
   
   
   <!-- 간단 리뷰 수정 -->
   <update id="updateSimpleReviewScore" parameterType="simpleReviewScore">
      update simple_review_score 
      set score_flavor = #{score_flavor}, score_volume = #{score_volume}, score_service = #{score_service}, total_score = #{total_score} 
      where simple_review_score_id = #{simple_review_score_id}
   </update>
   
   <update id="updateSimpleReviewFile" parameterType="simpleReviewFile">
      update simple_review_file 
      set file_name = #{file_name} 
      where simple_review_file_id = #{simple_review_file_id}
   </update>
   
   <update id="updateSumScore" parameterType="map">
      update simple_review_sumscore 
      set sum_score = sum_score - #{original_total_score}, sum_score = sum_score + #{new_total_score} 
      where restaurant_id = #{restaurant_id}
   </update>
   
   <update id="updateSimpleReview" parameterType="simpleReview">
      update simple_review 
      set simple_review_contents_text = #{simple_review_contents_text}, simple_review_registdate = now() 
      where simple_review_id = #{simple_review_id}
   </update>
   
   
   <!-- 좋아요 -->
   <update id="addLikeCount" parameterType="int">
      update simple_review_like 
      set simple_review_like_count = simple_review_like_count + 1 
      where simple_review_like_id = #{simple_review_like_id}
   </update>
   
   <select id="getLikeCount" parameterType="int" resultType="int">
      select simple_review_like_count 
      from review_list_view 
      where simple_review_id = #{simple_review_id}
   </select>
   
   <update id="cancelLikeCount" parameterType="int">
      update simple_review_like 
      set simple_review_like_count = simple_review_like_count - 1 
      where simple_review_like_id = #{simple_review_like_id}
   </update>
   
   
   
   <!-- 싫어요 -->
   <update id="addBadCount" parameterType="int">
      update simple_review_notify 
      set simple_review_notify_count = simple_review_notify_count + 1 
      where simple_review_notify_id = #{simple_review_notify_id}
   </update>
   
   <select id="getBadCount" parameterType="int" resultType="int">
      select simple_review_notify_count 
      from review_list_view 
      where simple_review_id = #{simple_review_id}
   </select>
   
   <update id="cancelBadCount" parameterType="int">
      update simple_review_notify 
      set simple_review_notify_count = simple_review_notify_count - 1
      where simple_review_notify_id = #{simple_review_notify_id} 
   </update>
   
   
   
</mapper>